<?xml version="1.0" encoding="utf-8"?>
<wso2registry>
    <currentDBConfig>wso2registry</currentDBConfig>
    <readOnly>false</readOnly>
    <enableCache>true</enableCache>
    <registryRoot>/</registryRoot>

	<dbConfig name="wso2registry">
		<url>jdbc:mysql://<%= mysql_server_1 %>:<%= mysql_port %>/<%= registry_database %>?autoReconnect=true</url>
        <userName><%= registry_user %></userName>
		<password><%= registry_password %></password>
        <driverName>com.mysql.jdbc.Driver</driverName>
        <maxActive><%= max_active %></maxActive>
        <maxWait><%= max_wait %></maxWait>
        <minIdle>5</minIdle>
        <validationQuery>SELECT 1</validationQuery>
    </dbConfig>

    <handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.synapse</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.wso2.esb</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.axis2</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.wso2.wsas</property>
        </filter>
    </handler>

	<handler class="org.wso2.carbon.registry.extensions.handlers.WSDLMediaTypeHandler">
		<property name="schemaLocationConfiguration" type="xml">
            <location>/trunk/schemas/</location>            
	    </property>
		<property name="wsdlLocationConfiguration" type="xml">
            <location>/trunk/wsdls/</location>            
	    </property>
		<filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/wsdl+xml</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.ZipWSDLMediaTypeHandler">
        <property name="wsdlMediaType">application/wsdl+xml</property>
        <property name="schemaMediaType">application/xsd+xml</property>
        <!--property name="wsdlExtension">.wsdl</property>
        <property name="schemaExtension">.xsd</property>
        <property name="archiveExtension">.gar</property>
        <property name="tempFilePrefix">wsdl</property-->
        <property name="schemaLocationConfiguration" type="xml">
            <location>/trunk/schemas/</location>
        </property>
        <property name="wsdlLocationConfiguration" type="xml">
            <location>/trunk/wsdls/</location>
        </property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.wso2.governance-archive</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.ServiceMediaTypeHandler">
      <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
	<property name="mediaType">application/vnd.wso2-service+xml</property>
      </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.PolicyMediaTypeHandler">
	<property name="policyLocationConfiguration" type="xml">
            <location>/trunk/policies/</location>            
	</property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/policy+xml</property>
        </filter>
    </handler>

	<handler class="org.wso2.carbon.registry.extensions.handlers.XSDMediaTypeHandler">
        <property name="locationConfiguration" type="xml">
            <location>/trunk/schemas/</location>            
        </property>
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/x-xsd+xml</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.ExternalLinkHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.wso2-hyperlink</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.EndpointMediaTypeHandler">
        <property name="endpointMediaType">application/vnd.wso2.endpoint</property>
        <property name="endpointLocationConfiguration" type="xml">
            <location>/trunk/endpoints/</location>
        </property>
        <filter class="org.wso2.carbon.registry.extensions.filters.EndpointMediaTypeMatcher">
        </filter>
    </handler>

    <!--remoteInstance url="https://localhost:9443/registry">
	<id>instanceid</id>
	<username>username</username>
	<password>password</password>
    </remoteInstance-->

    <!--remoteInstance url="https://localhost:9443/registry">
        <id>instanceid</id>
        <dbConfig>wso2registry</dbConfig>
        <readOnly>false</readOnly>
        <enableCache>true</enableCache>
        <registryRoot>/</registryRoot>
    </remoteInstance-->

    <!--mount path="/_system/config" overwrite="true|false|virtual">
        <instanceId>instanceid</instanceId>
        <targetPath>/_system/nodes</targetPath>
    </mount-->

    <staticConfiguration>
        <versioningProperties>true</versioningProperties>
        <versioningComments>false</versioningComments>
        <versioningTags>false</versioningTags>
        <versioningRatings>false</versioningRatings>
        <!-- Location you want to add service and default location will be /services/ -->
        <servicePath>/trunk/services/</servicePath>
    </staticConfiguration>
		
	<versionResourcesOnChange>false</versionResourcesOnChange>
</wso2registry>
